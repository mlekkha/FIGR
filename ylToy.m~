fprintf ('\n\n');
disp ('&&&&&&&&&&&&&&&&&& TOY MODEL &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&');
disp ('&  2-gene network for illlustration purposes              &');
fprintf ('\n');

opts.debug = 0;
opts.slopethresh = .01;
opts.exprthresh = .5;
opts.splinesmoothing = 1.00;   % 1 = no smoothing, 0 = extreme smoothing
opts.Rld_method = 'slope';
opts.Rld_thresh_on_frac = 0.2;
opts.Rld_thresh_off_frac = 0.01;
%opts.synthesisfunction = 'synthesis_sigmoid_sqrt';
opts.synthesisfunction = 'synthesis_heaviside';
opts.ODEAbsTol = 1e-4;
opts.ODEsolver = 'ode45';

%======== PREPARE INITIAL CONDITIONS AND NETWORK PARAMETERS ========
% rng (12345);  % seed the random number generator predictably
grn.Tgg     = [.5 3 ; -6 3];
grn.hg      = [-2    1]';
grn.Rg      = [0.4   1.2]';
grn.lambdag = [0.4   1.2]';
grn.Dg      = [0     0 ]';
tt = (0: 0.1: 20)';

xn0g = [.1 .1 ;   .1 .1;   .1 .1;   .1 .1;   .1 .1];  % initial conds

numGenes = size (grn.Tgg, 1); % assume no "externals"
numNuclei = size (xn0g, 1);
numTimepoints = numel (tt);
opts.geneNames = {'A', 'B'};

xntg        = NaN (numNuclei,numTimepoints,numGenes);
xntg(:,1,:) = xn0g;

%======== grn ---> xntg ========
[xntg] = computeTrajs (opts, grn, xntg, tt);

%======== xntg ---> grnCBI
[grnCBI, diagnostics] = infer (opts, xntg, tt, numGenes);

%======== PLOTS ========
plotTrajs (opts,xntg,xntg,tt,1);
ylim ([0 1]);

plot2DProjections (opts,xntg,diagnostics.yntg,tt,1, 1,2);
xlim ([0 1]); ylim ([0 1]);
printpdf (gcf, 'heatmap-xntgCB.pdf');

plot2DProjections (opts,xntg,diagnostics.yntg,tt,2, 1,2);
xlim ([0 1]); ylim ([0 1]);


plotGRN (opts, grn);
plotGRN (opts, grnCBI);

return;


%======================= WRITE TO PDF FILE ======================
function printpdf(h,outfilename)
set(h, 'PaperUnits','centimeters');
set(h, 'Units','centimeters');
pos=get(h,'Position');
set(h, 'PaperSize', [pos(3) pos(4)]);
set(h, 'PaperPositionMode', 'manual');
set(h, 'PaperPosition',[0 0 pos(3) pos(4)]);
print('-dpdf',outfilename);
end
